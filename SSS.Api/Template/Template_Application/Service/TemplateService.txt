using AutoMapper;
using AutoMapper.QueryableExtensions;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using SSS.Application.Seedwork.Service; 
using SSS.Domain.Seedwork.EventBus;
using SSS.Domain.Seedwork.Model;
using SSS.Domain.Template.Dto;
using SSS.Infrastructure.Repository.Template;
using SSS.Infrastructure.Util.Attribute;
using System; 
using SSS.Infrastructure.Seedwork.Cache.MemoryCache;

namespace SSS.Application.Template.Service
{
    [DIService(ServiceLifetime.Scoped, typeof(ITemplateService))]
    public class TemplateService : QueryService<SSS.Domain.Template.Template, TemplateInputDto, TemplateOutputDto>,
        ITemplateService
    {
        private readonly IMapper _mapper; 
        private readonly ILogger _logger;
        private readonly ITemplateRepository _repository;
		 private readonly MemoryCacheEx _memorycache;

        public TemplateService(IMapper mapper, MemoryCacheEx memorycache, ITemplateRepository repository, ILogger<TemplateService> logger) : base(mapper, repository)
        {
            _mapper = mapper; 
            _repository = repository;
			_memorycache = memorycache;
            _logger = logger;
        }

        public void AddTemplate(TemplateInputDto input)
        {
            input.id = Guid.NewGuid().ToString(); 
        }

        public Pages<List<TemplateOutputDto>> GetListTemplate(TemplateInputDto input)
        {
            return GetList(input);
        }
    }
}