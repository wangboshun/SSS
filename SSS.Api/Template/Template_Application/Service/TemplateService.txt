using AutoMapper;
using FluentValidation;
using Microsoft.Extensions.DependencyInjection;
using SSS.Application.Seedwork.Service;
using SSS.Domain.NameSpace.Template.Dto;
using SSS.Domain.Seedwork.ErrorHandler;
using SSS.Domain.Seedwork.Model;
using SSS.Infrastructure.Repository.NameSpace.Template;
using SSS.Infrastructure.Util.Attribute;
using System;
using System.Collections.Generic;

namespace SSS.Application.NameSpace.Template.Service
{
    [DIService(ServiceLifetime.Scoped, typeof(ITemplateService))]
    public class TemplateService : QueryService<SSS.Domain.NameSpace.Template.Template, TemplateInputDto, TemplateOutputDto>, ITemplateService
    {
        public TemplateService(IMapper mapper,
            ITemplateRepository repository,
            IErrorHandler error,
            IValidator<TemplateInputDto> validator) :
            base(mapper, repository, error, validator)
        {

        }

        public bool AddTemplate(TemplateInputDto input)
        {
            var result = Validator.Validate(input, ruleSet: "Insert");
            if (!result.IsValid)
            {
                Error.Execute(result);
                return false;
            }

            input.id = Guid.NewGuid().ToString();
            var model = Mapper.Map<SSS.Domain.NameSpace.Template.Template>(input);
            model.CreateTime=DateTime.Now;
            Repository.Add(model);
            return Repository.SaveChanges()>0;
        }

        public Pages<List<TemplateOutputDto>> GetListTemplate(TemplateInputDto input)
        {
            return GetPage(input);
        } 
    }
}