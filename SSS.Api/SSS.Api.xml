<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SSS.Api</name>
    </assembly>
    <members>
        <member name="T:SSS.Api.Bootstrap.ApplicationBuilderExtension">
            <summary>
                ApplicationBuilderExtension
            </summary>
        </member>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseHttpContext(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                注入HttpContext
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseApiException(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                异常返回
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseRedisCache(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.RedisOptions})">
            <summary>
            注入RedisCache
            </summary>
            <param name="app"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseMemCached(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.MemCachedOptions})">
            <summary>
            注入Memcached
            </summary>
            <param name="app"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:SSS.Api.Bootstrap.ServiceCollectionExtension">
            <summary>
                ServiceCollectionExtension
            </summary>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Service Base
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddAutoMapperSupport(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                AutoMapper
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Swagger
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddApiVersion(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ApiVersion
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemoryCacheEx(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                MemoryCache扩展
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)">
            <summary>
                配置Redis链接
            </summary>
            <param name="services"></param>
            <param name="section"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.RedisOptions})">
            <summary>
                配置Redis链接
            </summary>
            <param name="services"></param>
            <param name="options"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                默认Redis链接
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemCached(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)">
            <summary>
                配置Memcached链接
            </summary>
            <param name="services"></param>
            <param name="section"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemcached(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                默认Memcached链接
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemcached(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.MemCachedOptions})">
            <summary>
                配置Memcached链接
            </summary>
            <param name="services"></param>
            <param name="options"></param>
        </member>
        <member name="T:SSS.Api.Controllers.CodeController">
            <summary>
            代码生成
            </summary>
        </member>
        <member name="M:SSS.Api.Controllers.CodeController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            构造
            </summary>
            <param name="env"></param>
        </member>
        <member name="M:SSS.Api.Controllers.CodeController.Index">
            <summary>
            Index
            </summary>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.CodeController.CreateCode">
            <summary>
            生成操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.CodeController.AppDomainContext(System.String,System.Collections.Generic.List{SSS.Api.Controllers.Field})">
            <summary>
            填充类字段信息
            </summary>
            <param name="name"></param>
            <param name="fields"></param>
        </member>
        <member name="M:SSS.Api.Controllers.CodeController.Generator_Domain(System.String)">
            <summary>
                1
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SSS.Api.Controllers.CodeController.Generator_Infrastructure(System.String)">
            <summary>
                2
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SSS.Api.Controllers.CodeController.Generator_Application(System.String)">
            <summary>
                3
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SSS.Api.Controllers.CodeController.Generator_Api(System.String)">
            <summary>
                4
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:SSS.Api.Controllers.Field">
            <summary>
            Field
            </summary>
        </member>
        <member name="P:SSS.Api.Controllers.Field.field_name">
            <summary>
            field_name
            </summary>
        </member>
        <member name="P:SSS.Api.Controllers.Field.field_type">
            <summary>
            field_type
            </summary>
        </member>
        <member name="T:SSS.Api.Controllers.Coin.CoinAnalyseController">
            <summary>
            CoinAnalyseController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinAnalyseController.#ctor(SSS.Application.Coin.CoinAnalyse.Service.ICoinAnalyseService)">
            <summary>
            CoinAnalyseController
            </summary>
            <param name="service">ICoinAnalyseService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinAnalyseController.GetList(SSS.Domain.Coin.CoinAnalyse.Dto.CoinAnalyseInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinAnalyseController.AddCoinAnalyse(SSS.Domain.Coin.CoinAnalyse.Dto.CoinAnalyseInputDto)">
            <summary>
            AddCoinAnalyse
            </summary>
            <param name="input">CoinAnalyseInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Coin.CoinArticelController">
            <summary>
                CoinArticelController
            </summary>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinArticelController.#ctor(SSS.Application.Coin.CoinArticel.Service.ICoinArticelService)">
            <summary>
                CoinArticelController
            </summary>
            <param name="service">ICoinArticelService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinArticelController.GetList(SSS.Domain.Coin.CoinArticel.Dto.CoinArticelInputDto)">
            <summary>
                GetList
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinArticelController.GetNews(SSS.Domain.Coin.CoinArticel.Dto.CoinArticelInputDto)">
            <summary>
                GetNews
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinArticelController.GetNewsDetail(System.String)">
            <summary>
            GetNewsDetail
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinArticelController.AddCoinArticel(SSS.Domain.Coin.CoinArticel.Dto.CoinArticelInputDto)">
            <summary>
                AddCoinArticel
            </summary>
            <param name="input">CoinArticelInputDto</param>
            <returns></returns>
        </member>
        <member name="T:SSS.Api.Controllers.Coin.CoinInfoController">
            <summary>
            CoinInfoController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinInfoController.#ctor(SSS.Application.Coin.CoinInfo.Service.ICoinInfoService)">
            <summary>
            CoinInfoController
            </summary>
            <param name="service">ICoinInfoService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinInfoController.GetList(SSS.Domain.Coin.CoinInfo.Dto.CoinInfoInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinInfoController.AddCoinInfo(SSS.Domain.Coin.CoinInfo.Dto.CoinInfoInputDto)">
            <summary>
            AddCoinInfo
            </summary>
            <param name="input">CoinInfoInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Coin.CoinMessageController">
            <summary>
            CoinMessageController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinMessageController.#ctor(SSS.Application.Coin.CoinMessage.Service.ICoinMessageService)">
            <summary>
            CoinMessageController
            </summary>
            <param name="service">ICoinMessageService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinMessageController.GetList(SSS.Domain.Coin.CoinMessage.Dto.CoinMessageInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinMessageController.AddCoinMessage(SSS.Domain.Coin.CoinMessage.Dto.CoinMessageInputDto)">
            <summary>
            AddCoinMessage
            </summary>
            <param name="input">CoinMessageInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Coin.CoinTradeController">
            <summary>
            CoinTradeController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinTradeController.#ctor(SSS.Application.Coin.CoinTrade.Service.ICoinTradeService)">
            <summary>
            CoinTradeController
            </summary>
            <param name="service">ICoinTradeService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinTradeController.GetList(SSS.Domain.Coin.CoinTrade.Dto.CoinTradeInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinTradeController.AddCoinTrade(SSS.Domain.Coin.CoinTrade.Dto.CoinTradeInputDto)">
            <summary>
            AddCoinTrade
            </summary>
            <param name="input">CoinTradeInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Permission.MenuInfoController">
            <summary>
            MenuInfoController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.MenuInfoController.#ctor(SSS.Application.Permission.MenuInfo.Service.IMenuInfoService)">
            <summary>
            MenuInfoController
            </summary>
            <param name="service">IMenuInfoService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.MenuInfoController.GetList(SSS.Domain.Permission.MenuInfo.Dto.MenuInfoInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.MenuInfoController.GetChildren(SSS.Domain.Permission.MenuInfo.Dto.MenuInfoInputDto)">
            <summary>
                GetChildren
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.MenuInfoController.AddMenuInfo(SSS.Domain.Permission.MenuInfo.Dto.MenuInfoInputDto)">
            <summary>
            AddMenuInfo
            </summary>
            <param name="input">MenuInfoInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Permission.OperateInfoController">
            <summary>
            OperateInfoController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.OperateInfoController.#ctor(SSS.Application.Permission.OperateInfo.Service.IOperateInfoService)">
            <summary>
            OperateInfoController
            </summary>
            <param name="service">IOperateInfoService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.OperateInfoController.GetList(SSS.Domain.Permission.OperateInfo.Dto.OperateInfoInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.OperateInfoController.AddOperateInfo(SSS.Domain.Permission.OperateInfo.Dto.OperateInfoInputDto)">
            <summary>
            AddOperateInfo
            </summary>
            <param name="input">OperateInfoInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Permission.RoleInfoController">
            <summary>
            RoleInfoController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleInfoController.#ctor(SSS.Application.Permission.RoleInfo.Service.IRoleInfoService)">
            <summary>
            RoleInfoController
            </summary>
            <param name="service">IRoleInfoService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleInfoController.GetList(SSS.Domain.Permission.RoleInfo.Dto.RoleInfoInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleInfoController.GetChildren(SSS.Domain.Permission.RoleInfo.Dto.RoleInfoInputDto)">
            <summary>
                GetChildren
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleInfoController.AddRoleInfo(SSS.Domain.Permission.RoleInfo.Dto.RoleInfoInputDto)">
            <summary>
            AddRoleInfo
            </summary>
            <param name="input">RoleInfoInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Permission.RoleMenuController">
            <summary>
            RoleMenuController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleMenuController.#ctor(SSS.Application.Permission.RoleMenu.Service.IRoleMenuService)">
            <summary>
            RoleMenuController
            </summary>
            <param name="service">IRoleMenuService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleMenuController.GetList(SSS.Domain.Permission.RoleMenu.Dto.RoleMenuInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleMenuController.AddRoleMenu(SSS.Domain.Permission.RoleMenu.Dto.RoleMenuInputDto)">
            <summary>
            AddRoleMenu
            </summary>
            <param name="input">RoleMenuInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Permission.RoleOperateController">
            <summary>
            RoleOperateController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleOperateController.#ctor(SSS.Application.Permission.RoleOperate.Service.IRoleOperateService)">
            <summary>
            RoleOperateController
            </summary>
            <param name="service">IRoleOperateService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleOperateController.GetList(SSS.Domain.Permission.RoleOperate.Dto.RoleOperateInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleOperateController.AddRoleOperate(SSS.Domain.Permission.RoleOperate.Dto.RoleOperateInputDto)">
            <summary>
            AddRoleOperate
            </summary>
            <param name="input">RoleOperateInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Permission.UserInfoController">
            <summary>
                UserInfoController
            </summary>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserInfoController.#ctor(SSS.Application.Permission.UserInfo.Service.IUserInfoService)">
            <summary>
                UserInfoController
            </summary>
            <param name="service">IUserInfoService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserInfoController.GetList(SSS.Domain.Permission.UserInfo.Dto.UserInfoInputDto)">
            <summary>
                GetList
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserInfoController.GetChildren(SSS.Domain.Permission.UserInfo.Dto.UserInfoInputDto)">
            <summary>
                GetChildren
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserInfoController.Login(SSS.Domain.Permission.UserInfo.Dto.UserInfoInputDto)">
            <summary>
            login
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserInfoController.AddUserInfo(SSS.Domain.Permission.UserInfo.Dto.UserInfoInputDto)">
            <summary>
                AddUserInfo
            </summary>
            <param name="input">UserInfoInputDto</param>
            <returns></returns>
        </member>
        <member name="T:SSS.Api.Controllers.Permission.UserRoleController">
            <summary>
            UserRoleController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserRoleController.#ctor(SSS.Application.Permission.UserRole.Service.IUserRoleService)">
            <summary>
            UserRoleController
            </summary>
            <param name="service">IUserRoleService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserRoleController.GetList(SSS.Domain.Permission.UserRole.Dto.UserRoleInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserRoleController.AddUserRole(SSS.Domain.Permission.UserRole.Dto.UserRoleInputDto)">
            <summary>
            AddUserRole
            </summary>
            <param name="input">UserRoleInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Program">
            <summary>
            Program 
            </summary>
        </member>
        <member name="M:SSS.Api.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:SSS.Api.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            CreateWebHostBuilder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:SSS.Api.Startup">
            <summary>
                Startup
            </summary>
        </member>
        <member name="M:SSS.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Startup
            </summary>
            <param name="configuration">IConfiguration</param>
        </member>
        <member name="P:SSS.Api.Startup.Configuration">
            <summary>
                Configuration
            </summary>
        </member>
        <member name="M:SSS.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                ConfigureServices
            </summary>
            <param name="services">IServiceCollection</param>
        </member>
        <member name="M:SSS.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Options.IOptions{Senparc.CO2NET.SenparcSetting},Microsoft.Extensions.Options.IOptions{Senparc.Weixin.Entities.SenparcWeixinSetting})">
            <summary>
            Configure
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="senparcSetting"></param>
            <param name="senparcWeixinSetting"></param>
        </member>
        <member name="M:SSS.Api.Startup.Swagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                Swagger
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:SSS.Api.Startup.UseDefaultStaticFile(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                文件浏览
            </summary>
            <param name="app"></param>
        </member>
    </members>
</doc>
