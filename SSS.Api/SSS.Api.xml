<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SSS.Api</name>
    </assembly>
    <members>
        <member name="T:ApiVersions">
            <summary>
            版本号
            </summary>
        </member>
        <member name="F:ApiVersions.v1">
            <summary>
            v1 版本
            </summary>
        </member>
        <member name="F:ApiVersions.v2">
            <summary>
            v2 版本
            </summary>
        </member>
        <member name="F:ApiVersions.v3">
            <summary>
            v3 版本
            </summary>
        </member>
        <member name="T:SSS.Api.Bootstrap.ApplicationBuilderExtension">
            <summary>
                ApplicationBuilderExtension
            </summary>
        </member>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseHttpContext(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                注入HttpContext
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseApiException(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                异常返回
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseRedisCache(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.RedisOptions})">
            <summary>
            注入RedisCache
            </summary>
            <param name="app"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Bootstrap.ApplicationBuilderExtension.UseMemCached(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.MemCachedOptions})">
            <summary>
            注入Memcached
            </summary>
            <param name="app"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:SSS.Api.Bootstrap.ServiceCollectionExtension">
            <summary>
                ServiceCollectionExtension
            </summary>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Service Base
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddAutoMapperSupport(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                AutoMapper
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Swagger
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddApiVersion(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ApiVersion
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemoryCacheEx(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                MemoryCache扩展
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)">
            <summary>
                配置Redis链接
            </summary>
            <param name="services"></param>
            <param name="section"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.RedisOptions})">
            <summary>
                配置Redis链接
            </summary>
            <param name="services"></param>
            <param name="options"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                默认Redis链接
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemCached(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationSection)">
            <summary>
                配置Memcached链接
            </summary>
            <param name="services"></param>
            <param name="section"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemcached(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                默认Memcached链接
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SSS.Api.Bootstrap.ServiceCollectionExtension.AddMemcached(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{SSS.Infrastructure.Seedwork.Cache.Redis.MemCachedOptions})">
            <summary>
                配置Memcached链接
            </summary>
            <param name="services"></param>
            <param name="options"></param>
        </member>
        <member name="T:SSS.Api.Controllers.Coin.CoinAnalyseController">
            <summary>
            CoinAnalyseController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinAnalyseController.#ctor(SSS.Application.Coin.CoinAnalyse.Service.ICoinAnalyseService)">
            <summary>
            CoinAnalyseController
            </summary>
            <param name="service">ICoinAnalyseService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinAnalyseController.GetList(SSS.Domain.Coin.CoinAnalyse.Dto.CoinAnalyseInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinAnalyseController.AddCoinAnalyse(SSS.Domain.Coin.CoinAnalyse.Dto.CoinAnalyseInputDto)">
            <summary>
            AddCoinAnalyse
            </summary>
            <param name="input">CoinAnalyseInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Coin.CoinArticelController">
            <summary>
                CoinArticelController
            </summary>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinArticelController.#ctor(SSS.Application.Coin.CoinArticel.Service.ICoinArticelService)">
            <summary>
                CoinArticelController
            </summary>
            <param name="service">ICoinArticelService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinArticelController.GetList(SSS.Domain.Coin.CoinArticel.Dto.CoinArticelInputDto)">
            <summary>
                GetList
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinArticelController.GetNews(SSS.Domain.Coin.CoinArticel.Dto.CoinArticelInputDto)">
            <summary>
                GetNews
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinArticelController.GetNewsDetail(System.String)">
            <summary>
            GetNewsDetail
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinArticelController.AddCoinArticel(SSS.Domain.Coin.CoinArticel.Dto.CoinArticelInputDto)">
            <summary>
                AddCoinArticel
            </summary>
            <param name="input">CoinArticelInputDto</param>
            <returns></returns>
        </member>
        <member name="T:SSS.Api.Controllers.Coin.CoinInfoController">
            <summary>
            CoinInfoController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinInfoController.#ctor(SSS.Application.Coin.CoinInfo.Service.ICoinInfoService)">
            <summary>
            CoinInfoController
            </summary>
            <param name="service">ICoinInfoService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinInfoController.GetList(SSS.Domain.Coin.CoinInfo.Dto.CoinInfoInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinInfoController.AddCoinInfo(SSS.Domain.Coin.CoinInfo.Dto.CoinInfoInputDto)">
            <summary>
            AddCoinInfo
            </summary>
            <param name="input">CoinInfoInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Coin.CoinMessageController">
            <summary>
            CoinMessageController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinMessageController.#ctor(SSS.Application.Coin.CoinMessage.Service.ICoinMessageService)">
            <summary>
            CoinMessageController
            </summary>
            <param name="service">ICoinMessageService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinMessageController.GetList(SSS.Domain.Coin.CoinMessage.Dto.CoinMessageInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinMessageController.AddCoinMessage(SSS.Domain.Coin.CoinMessage.Dto.CoinMessageInputDto)">
            <summary>
            AddCoinMessage
            </summary>
            <param name="input">CoinMessageInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Coin.CoinTradeController">
            <summary>
            CoinTradeController
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinTradeController.#ctor(SSS.Application.Coin.CoinTrade.Service.ICoinTradeService)">
            <summary>
            CoinTradeController
            </summary>
            <param name="service">ICoinTradeService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinTradeController.GetList(SSS.Domain.Coin.CoinTrade.Dto.CoinTradeInputDto)">
            <summary>
            GetList
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Coin.CoinTradeController.AddCoinTrade(SSS.Domain.Coin.CoinTrade.Dto.CoinTradeInputDto)">
            <summary>
            AddCoinTrade
            </summary>
            <param name="input">CoinTradeInputDto</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Permission.MenuInfoController">
            <summary>
            菜单信息
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.MenuInfoController.#ctor(SSS.Application.Permission.MenuInfo.Service.IMenuInfoService)">
            <summary>
            MenuInfoController
            </summary>
            <param name="service">IMenuInfoService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.MenuInfoController.GetList(SSS.Domain.Permission.MenuInfo.Dto.MenuInfoInputDto)">
            <summary>
            获取所有菜单信息
            </summary>
            <param name="input">input</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.MenuInfoController.GetChildren(System.String)">
            <summary>
                获取菜单下的所有下级
            </summary>
            <param name="menuid">菜单Id</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.MenuInfoController.AddMenuInfo(SSS.Domain.Permission.MenuInfo.Dto.MenuInfoInputDto)">
            <summary>
            添加菜单
            </summary>
            <param name="input">菜单名称</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Permission.OperateInfoController">
            <summary>
            操作信息
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.OperateInfoController.#ctor(SSS.Application.Permission.OperateInfo.Service.IOperateInfoService)">
            <summary>
            OperateInfoController
            </summary>
            <param name="service">IOperateInfoService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.OperateInfoController.GetList(SSS.Domain.Permission.OperateInfo.Dto.OperateInfoInputDto)">
            <summary>
                获取所有操作信息
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.OperateInfoController.AddOperateInfo(SSS.Domain.Permission.OperateInfo.Dto.OperateInfoInputDto)">
            <summary>
            添加操作
            </summary>
            <param name="input">操作名称</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.OperateInfoController.GetChildren(System.String)">
            <summary>
                获取操作下的所有下级
            </summary>
            <param name="operateid">操作Id</param>
            <returns></returns>
        </member>
        <member name="T:SSS.Api.Controllers.Permission.RoleInfoController">
            <summary>
            角色信息
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleInfoController.#ctor(SSS.Application.Permission.RoleInfo.Service.IRoleInfoService)">
            <summary>
            RoleInfoController
            </summary>
            <param name="service">IRoleInfoService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleInfoController.GetList(SSS.Domain.Permission.RoleInfo.Dto.RoleInfoInputDto)">
            <summary>
                获取所有角色信息
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleInfoController.GetChildren(System.String)">
            <summary>
                获取角色下的所有下级
            </summary>
            <param name="roleid">角色Id</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleInfoController.AddRoleInfo(SSS.Domain.Permission.RoleInfo.Dto.RoleInfoInputDto)">
            <summary>
            添加角色信息
            </summary>
            <param name="input">角色名称</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Permission.RoleMenuController">
            <summary>
            菜单角色映射
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleMenuController.#ctor(SSS.Application.Permission.RoleMenu.Service.IRoleMenuService)">
            <summary>
            RoleMenuController
            </summary>
            <param name="service">IRoleMenuService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleMenuController.GetList(SSS.Domain.Permission.RoleMenu.Dto.RoleMenuInputDto)">
            <summary>
                获取所有菜单角色映射信息
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleMenuController.GetMenuByRole(System.String)">
            <summary>
            获取角色下所有菜单
            </summary>
            <param name="roleid">角色Id</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleMenuController.DeleteRoleMenuByRole(System.String)">
            <summary>
            删除角色下的所有菜单
            </summary>
            <param name="roleid">角色Id</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleMenuController.AddRoleMenu(SSS.Domain.Permission.RoleMenu.Dto.RoleMenuInputDto)">
            <summary>
            添加角色菜单关联关系
            </summary>
            <param name="input">角色Id、菜单Id</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Permission.RoleOperateController">
            <summary>
            角色操作映射
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleOperateController.#ctor(SSS.Application.Permission.RoleOperate.Service.IRoleOperateService)">
            <summary>
            RoleOperateController
            </summary>
            <param name="service">IRoleOperateService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleOperateController.GetList(SSS.Domain.Permission.RoleOperate.Dto.RoleOperateInputDto)">
            <summary>
                获取所有角色操作映射信息
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleOperateController.GetOperateByRole(System.String)">
            <summary>
            获取角色下的所有操作
            </summary>
            <param name="roleid">角色Id</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleOperateController.DeleteRoleOperateByRole(System.String)">
            <summary>
            删除角色下的所有操作
            </summary>
            <param name="roleid">角色Id</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.RoleOperateController.AddRoleOperate(SSS.Domain.Permission.RoleOperate.Dto.RoleOperateInputDto)">
            <summary>
            添加角色操作关联关系
            </summary>
            <param name="input">角色Id、操作Id</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.Permission.UserInfoController">
            <summary>
                用户信息
            </summary>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserInfoController.#ctor(SSS.Application.Permission.UserInfo.Service.IUserInfoService)">
            <summary>
                UserInfoController
            </summary>
            <param name="service">IUserInfoService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserInfoController.GetList(SSS.Domain.Permission.UserInfo.Dto.UserInfoInputDto)">
            <summary>
                获取所有用户信息
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserInfoController.GetChildrenById(System.String)">
            <summary>
                获取用户下的所有下级
            </summary>
            <param name="userid">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserInfoController.GetUserPermission(System.String)">
            <summary>
                获取用户所有权限：菜单、操作权限
            </summary>
            <param name="userid">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserInfoController.Login(SSS.Domain.Permission.UserInfo.Dto.UserInfoInputDto)">
            <summary>
            用户登录
            </summary>
            <param name="input">账号、密码</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserInfoController.AddUserInfo(SSS.Domain.Permission.UserInfo.Dto.UserInfoInputDto)">
            <summary>
             添加用户
            </summary>
            <param name="input">账号、密码</param>
            <returns></returns>
        </member>
        <member name="T:SSS.Api.Controllers.Permission.UserRoleController">
            <summary>
            用户角色映射
            </summary> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserRoleController.#ctor(SSS.Application.Permission.UserRole.Service.IUserRoleService)">
            <summary>
            UserRoleController
            </summary>
            <param name="service">IUserRoleService</param>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserRoleController.GetList(SSS.Domain.Permission.UserRole.Dto.UserRoleInputDto)">
            <summary>
                获取所有用户角色映射信息
            </summary>
            <param name="input">input</param>
            <returns></returns>
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserRoleController.GetOperateByRole(System.String)">
            <summary>
            获取角色下所有用户信息
            </summary>
            <param name="roleid">角色Id</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserRoleController.DeleteUserRoleByRole(System.String)">
            <summary>
            删除角色下的所有用户
            </summary>
            <param name="roleid">角色Id</param>
            <returns></returns> 
        </member>
        <member name="M:SSS.Api.Controllers.Permission.UserRoleController.AddUserRole(SSS.Domain.Permission.UserRole.Dto.UserRoleInputDto)">
            <summary>
            添加用户角色关系
            </summary>
            <param name="input">用户Id、角色Id</param>
            <returns></returns> 
        </member>
        <member name="T:SSS.Api.Controllers.System.CodeController">
            <summary>	
            代码生成	
            </summary>	
        </member>
        <member name="M:SSS.Api.Controllers.System.CodeController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>	
            构造	
            </summary>	
            <param name="env"></param>	
        </member>
        <member name="M:SSS.Api.Controllers.System.CodeController.Index">
            <summary>	
            主页	
            </summary>	
            <returns></returns>	
        </member>
        <member name="M:SSS.Api.Controllers.System.CodeController.CreateCode">
            <summary>	
            生成操作	
            </summary>	
            <returns></returns>	
        </member>
        <member name="M:SSS.Api.Controllers.System.CodeController.AppDomainContext(System.Collections.Generic.List{SSS.Api.Controllers.System.Field})">
            <summary>	
            填充类字段信息	
            </summary>	  
            <param name="fields"></param>	
        </member>
        <member name="M:SSS.Api.Controllers.System.CodeController.Generator_Domain">
            <summary>	
                1	
            </summary>	 
        </member>
        <member name="M:SSS.Api.Controllers.System.CodeController.Generator_Infrastructure">
            <summary>	
                2	
            </summary>	 
        </member>
        <member name="M:SSS.Api.Controllers.System.CodeController.Generator_Application">
            <summary>	
                3	
            </summary>	 
        </member>
        <member name="M:SSS.Api.Controllers.System.CodeController.Generator_Api">
            <summary>	
                4	
            </summary>	 
        </member>
        <member name="T:SSS.Api.Controllers.System.Field">
            <summary>	
            Field	
            </summary>	
        </member>
        <member name="P:SSS.Api.Controllers.System.Field.field_name">
            <summary>	
            field_name	
            </summary>	
        </member>
        <member name="P:SSS.Api.Controllers.System.Field.field_type">
            <summary>	
            field_type	
            </summary>	
        </member>
        <member name="T:SSS.Api.Program">
            <summary>
            Program 
            </summary>
        </member>
        <member name="M:SSS.Api.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:SSS.Api.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            CreateWebHostBuilder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:SSS.Api.Startup">
            <summary>
                Startup
            </summary>
        </member>
        <member name="M:SSS.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Startup
            </summary>
            <param name="configuration">IConfiguration</param>
        </member>
        <member name="P:SSS.Api.Startup.Configuration">
            <summary>
                Configuration
            </summary>
        </member>
        <member name="M:SSS.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                ConfigureServices
            </summary>
            <param name="services">IServiceCollection</param>
        </member>
        <member name="M:SSS.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Options.IOptions{Senparc.CO2NET.SenparcSetting},Microsoft.Extensions.Options.IOptions{Senparc.Weixin.Entities.SenparcWeixinSetting})">
            <summary>
            Configure
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="senparcSetting"></param>
            <param name="senparcWeixinSetting"></param>
        </member>
        <member name="M:SSS.Api.Startup.Swagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                Swagger
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:SSS.Api.Startup.UseDefaultStaticFile(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                文件浏览
            </summary>
            <param name="app"></param>
        </member>
    </members>
</doc>
