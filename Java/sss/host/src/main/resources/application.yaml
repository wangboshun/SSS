spring:
  mvc:
    pathmatch:
      # 配置策略
      matching-strategy: ant-path-matcher
  profiles:
    include: iot,user,common,system
    autoconfigure:
      exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  datasource:
    druid:
      #配置初始化大小/最小/最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      #监控统计拦截的filters
      filters: stat,wall         #底层开启功能，stat（sql监控），wall（防火墙）开启监控功能，防火墙功能  写几个相当于开启几个功能组件
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      stat-view-servlet: #druid的监控页功能
        enabled: true           #开启监控页
        login-username: admin   #开启监控页的登录用户名
        login-password: 123456  #开启监控页的登录密码
        resetEnable: false      #关闭重置按钮
        allow: 127.0.0.1        #IP白名单
        deny: ""                #IP黑名单
      web-stat-filter: #监控web
        enabled: true           #开启功能,监控我们的web应用
        urlPattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
      filter:
        stat: #对上面filters里面的stat的详细配置
          enabled: true         #开启
          slow-sql-millis: 5000 #只要查询时间超过1000毫秒的都是慢查询
          log-slow-sql: true    #记录慢查询到日志中
        wall:
          enabled: true         #开启防火墙
          config:
            update-allow: true  #更新操作被开启，如果为false，则全部更新被拦截，默认也是true
    type: com.alibaba.druid.pool.DruidDataSource
    dynamic:
      primary: main
      strict: false
      datasource:
        main:
          username: root
          password: 123456
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/wbs?rewriteBatchedStatements=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true
        iot:
          username: sa
          password: 123456
          driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
          url: jdbc:sqlserver://127.0.0.1:1433;database=pbgSQTX_3;integratedSecurity=false;encrypt=true;trustServerCertificate=true
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: admin
    password: 123456
  redis:
    host: 127.0.0.1
    port: 6379
    password: 123456

sa-token:
  # token 名称 (同时也是cookie名称)
  token-name: token
  # token 有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
#  is-log: true

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    mapUnderscoreToCamelCase: false #关闭下划线转驼峰

springdoc:
  swagger-ui:
    path: /docs
    enabled: true #是否开启UI
  api-docs:
    enabled: true
    groups:
      enabled: true

logging:
  config: classpath:logback-spring.xml
  file:
    path: logs
